name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: bitte-desktop_${{ github.ref_name }}_amd64.deb
          - os: macos-latest
            artifact_name: Bitte.Desktop_${{ github.ref_name }}_aarch64.dmg
          - os: windows-latest
            artifact_name: Bitte.Desktop_${{ github.ref_name }}_x64.msi

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Build the app
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            pnpm tauri build
            mkdir -p src/download
            cp -r src-tauri/target/release/bundle/* src/download/
            rm -rf src-tauri/target/release/bundle
          else
            chmod +x ./scripts/build.sh
            ./scripts/build.sh
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: src/download/*
          retention-days: 5

  mobile-build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Install Android SDK
        uses: android-actions/setup-android@v2

      - name: Install iOS dependencies
        run: |
          brew install cocoapods
          pod setup

      - name: Build Android
        run: pnpm tauri android build

      - name: Build iOS
        run: pnpm tauri ios build

      - name: Upload Android artifact
        uses: actions/upload-artifact@v4
        with:
          name: bitte-desktop_${{ github.ref_name }}_android.apk
          path: src-tauri/target/android/app/build/outputs/apk/release/*.apk
          retention-days: 5

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: bitte-desktop_${{ github.ref_name }}_ios.ipa
          path: src-tauri/target/ios/build/*.ipa
          retention-days: 5

  create-release:
    needs: [release, mobile-build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts/
          pattern: Bitte.Desktop_*.dmg,Bitte.Desktop_*.msi,bitte-desktop_*.deb,bitte-desktop_*.apk,bitte-desktop_*.ipa

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/*.dmg
            ./artifacts/*.msi
            ./artifacts/*.deb
            ./artifacts/*.apk
            ./artifacts/*.ipa
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Update README with download links
        run: |
          # Get the release URL
          RELEASE_URL="https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}"

          # Update the README.md
          if [ -f README.md ]; then
            # Create a temporary file
            TMP_FILE=$(mktemp)

            # Read the current README
            cat README.md > "$TMP_FILE"

            # Function to update or add download link
            update_download_link() {
              local pattern=$1
              local new_url=$2
              if grep -q "$pattern" "$TMP_FILE"; then
                # Update existing link
                sed -i "s|$pattern|$new_url|g" "$TMP_FILE"
              else
                # Add new link if it doesn't exist
                echo -e "\n### Downloads\n" >> "$TMP_FILE"
                echo "- [$new_url]($new_url)" >> "$TMP_FILE"
              fi
            }

            # Update or add download links for each platform
            update_download_link "https://github.com/.*/releases/download/.*/Bitte.Desktop_.*_aarch64.dmg" "$RELEASE_URL/Bitte.Desktop_${{ github.ref_name }}_aarch64.dmg"
            update_download_link "https://github.com/.*/releases/download/.*/Bitte.Desktop_.*_x64.msi" "$RELEASE_URL/Bitte.Desktop_${{ github.ref_name }}_x64.msi"
            update_download_link "https://github.com/.*/releases/download/.*/bitte-desktop_.*_amd64.deb" "$RELEASE_URL/bitte-desktop_${{ github.ref_name }}_amd64.deb"
            update_download_link "https://github.com/.*/releases/download/.*/bitte-desktop_.*_android.apk" "$RELEASE_URL/bitte-desktop_${{ github.ref_name }}_android.apk"
            update_download_link "https://github.com/.*/releases/download/.*/bitte-desktop_.*_ios.ipa" "$RELEASE_URL/bitte-desktop_${{ github.ref_name }}_ios.ipa"

            # Move the temporary file back to README.md
            mv "$TMP_FILE" README.md

            # Commit changes
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add README.md
            git commit -m "Update download links in README for release ${{ github.ref_name }}"
            git push
          fi